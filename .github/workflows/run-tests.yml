name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest, ubuntu-18.04 ]  # 18.04 will be used to test Alpine Linux

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v1
        with:
          token: ${{ github.token }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven
      - name: Test with Maven
        if: ${{ matrix.os != 'ubuntu-18.04' }}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            xvfb-run mvn --batch-mode clean test
          elif [ "$RUNNER_OS" == "Windows" ]; then
            mvn --batch-mode clean test
          elif [ "$RUNNER_OS" == "macOS" ]; then
            mvn --batch-mode clean test
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
        shell: bash
      - name: Test Specific Methods On Alpine Linux
        uses: uraimo/run-on-arch-action@v2
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        with:
          arch: aarch64
          distro: alpine_latest
          githubToken: ${{ github.token }}
          shell: /bin/sh
          install: |
            apk update
            apk add openjdk17-jre-headless
            apk add maven
          run: |
            ls
            export PATH=${PATH}:${JAVA_HOME}/bin
            mvn --batch-mode clean test -Dtest=FFTTest,ApplicationDirectoryTest
      - name: Upload Coverage Report to CodeCov
        uses: codecov/codecov-action@v3
        with:
          files: target/site/jacoco/jacoco.xml
      - name: Upload JaCoCo HTML File
        uses: actions/upload-artifact@v3
        with:
          name: JaCoCo_Report_For_${{ matrix.os }}
          path: target/site/jacoco
